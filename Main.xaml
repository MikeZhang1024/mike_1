<Activity mc:Ignorable="sap sap2010" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="605.333333333333,423.333333333333" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Exchange</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="376,358.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="variable1" />
      <Variable x:TypeArguments="x:String" Name="variable2" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim strNew As String = String.Empty&#xD;&#xA;&#xD;&#xA;           Dim intLenbyByte As Integer = System.Text.Encoding.UTF8.GetByteCount(Argument1) '按照UTF8编码方式取得p_str的字节数&#xD;&#xA;           If intLenbyByte &lt;= 30 Then&#xD;&#xA;              strNew =Argument1&#xD;&#xA;              Argument2 = strNew &#xD;&#xA;           End If&#xD;&#xA;&#xD;&#xA;           Dim intWholeLenByCha As Integer = Argument1.Length '按字符个数计算总长度&#xD;&#xA;           Dim intWholeLenByByte As Integer = 0         '按字符字节数计算总长度&#xD;&#xA;           Dim intHalfLenByCha As Integer = 0          '因为用的是二分法，所以存储每次所需取得的字符个数的一半&#xD;&#xA;           Dim intLastIndexByCha As Integer = 0         '上一次计算时的字符的个数&#xD;&#xA;&#xD;&#xA;           For i = 0 To Argument1.Length - 1&#xD;&#xA;              If i = 0 Then&#xD;&#xA;                 strNew = Argument1.Substring(0, intWholeLenByCha \ 2)&#xD;&#xA;                 intHalfLenByCha = intWholeLenByCha \ 2&#xD;&#xA;              Else&#xD;&#xA;                 strNew = Argument1.Substring(0, i)&#xD;&#xA;              End If&#xD;&#xA;&#xD;&#xA;              intWholeLenByByte = System.Text.Encoding.UTF8.GetByteCount(strNew)&#xD;&#xA;&#xD;&#xA;              If intWholeLenByByte = 30 Then&#xD;&#xA;                 Argument2 = strNew&#xD;&#xA;              ElseIf intWholeLenByByte &lt; 30 Then&#xD;&#xA;                 intLastIndexByCha = i&#xD;&#xA;                 intHalfLenByCha = (intWholeLenByCha - (i + 1)) \ 2 '总字符长度需要减的字符个数应该是index i +1&#xD;&#xA;                 i = i + intHalfLenByCha&#xD;&#xA;              Else&#xD;&#xA;                 If intLastIndexByCha = i - 1 Then '满足if条件时表明特殊字符占多个字节，且刚好卡在临界位&#xD;&#xA;                     strNew = Argument1.Substring(0, intLastIndexByCha)&#xD;&#xA;                     Argument2 = strNew&#xD;&#xA;                 End If&#xD;&#xA;                 i = intLastIndexByCha + intHalfLenByCha \ 2&#xD;&#xA;                 intHalfLenByCha = intHalfLenByCha \ 2&#xD;&#xA;              End If&#xD;&#xA;           Next&#xD;&#xA;           Argument2 =  strNew&#xD;&#xA;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="Argument1">
          <Literal x:TypeArguments="x:String">fsfdsfsfdsfs你爱我不 你不爱我 你爱我吧 球球你了</Literal>
        </InArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="Argument2">
          <mva:VisualBasicReference x:TypeArguments="x:String" ExpressionText="variable2" />
        </OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="334,62.6666666666667" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[variable2]" />
  </Sequence>
</Activity>